# 应用服务 WEB 访问端口
server:
  port: 8092
#Apollo 配置
app:
  id: 101 # 对应 Apollo 中创建的项目 AppId
apollo:
  meta: http://localhost:8080  # Apollo Meta Server 地址
  autoUpdateInjectedSpringProperties: true
  bootstrap:
    enabled: true  # 启用 Apollo 配置加载
    namespaces: application  # 加载多个命名空间
    eagerLoad:
      enabled: true  # 提前加载配置（解决日志初始化冲突）

#配置日志
mybatis-plus:
  configuration:
    log-impl: ${mybatis-plus.configuration.log-impl}
#    org.apache.ibatis.logging.stdout.StdOutImpl

management:
  health:
    xxljob:
      enabled: ${management.health.xxljob.enabled}

appkey:
  apollo:
    appId: 101
#    ${appkey.apollo.appId}
#    101
    opUser: admin-ncf
#    ${appkey.apollo.opUser}
#    admin-ncf
    cluster: default
#    ${appkey.apollo.cluster}
#    default
    namespace: application
#    ${appkey.apollo.namespace}
#    application

spring:
  datasource:
    url: ${spring.datasource.url}
    #    jdbc:mysql://rm-cn-lf646m6e4001lgo.rwlb.rds.aliyuncs.com:3306/apollochanger?useSSL=true&serverTimezone=Asia/Shanghai
    username: ${spring.datasource.username}
#    apollochanger
    password: ${spring.datasource.password}
#    Nn076076!
    driver-class-name: ${spring.datasource.driver-class-name}
#    com.mysql.cj.jdbc.Driver
  mvc:
    pathmatch:
      matching-strategy: ${spring.mvc.pathmatch.matching-strategy}
#      ant_path_matcher
xxl:
  job:
    enabled: false  # 关闭 XXL-JOB 初始化
    admin:
      ### 调度中心部署根地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      addresses: ${xxl.job.admin.addresses}
#      XxlJobTemplate相关配置
      username: ${xxl.job.admin.username}
      password: ${xxl.job.admin.password}
#      http://127.0.0.1:9080/xxl-job-admin
    ### 执行器通讯TOKEN [选填]：非空时启用；
    accessToken: ${xxl.job.accessToken}

#    default_token
    executor:
      ### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: ${xxl.job.executor.appname}
#      xxl-job-executor-sample
      ### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address: ${xxl.job.executor.address}
      ### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip: ${xxl.job.executor.ip}
#      192.168.0.115
      ### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: ${xxl.job.executor.port}
#      9999
      ### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: ${xxl.job.executor.logpath}
      ### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: ${xxl.job.executor.logretentiondays}
#      30

dingtalk:
  appKey: "dingrzt0dsutkgggladp"
#  ${dingtalk.appKey}
  appSecret: "9CD8LNQbFm_RgZeFNPeeysf1LjlqeVcvKrZqvcklU2cPgUr7l7Db71HivF7hlDwH"
#    ${dingtalk.appSecret}
#  "9CD8LNQbFm_RgZeFNPeeysf1LjlqeVcvKrZqvcklU2cPgUr7l7Db71HivF7hlDwH"
  cardTemplateId: "0b7a7782-fd54-4d61-b33a-43524accbdf2.schema"
#    ${dingtalk.cardTemplateId}
#  "0b7a7782-fd54-4d61-b33a-43524accbdf2.schema"
  callbackType: "STREAM"
#  ${dingtalk.callbackType}
#  "STREAM"
  robotCode: "dingrzt0dsutkgggladp"
#    ${dingtalk.robotCode}
#  "dingrzt0dsutkgggladp"







